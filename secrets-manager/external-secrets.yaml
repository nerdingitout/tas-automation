# uds and ibm-common-services secrets
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: ibm-entitlement
  namespace: ibm-common-services
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: ibm-cluster-secret-store
    kind: ClusterSecretStore
  target:
    template:
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: '{"auths":{"{{ .registryHost }}":{"username":"{{ .registryName }}","password":"{{ .password }}", "auth":"{{ printf "%s:%s" .registryName .password | b64enc }}"}}}'
  data:
  - secretKey: registryName
    remoteRef:
      key: kv/test
      property: 'docker-username'
  - secretKey: registryHost
    remoteRef:
      key: kv/test
      property: 'docker-server'
  - secretKey: password
    remoteRef:
      key: kv/test
      property: 'docker-password'
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: database-credentials
  namespace: ibm-common-services
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: ibm-cluster-secret-store
    kind: ClusterSecretStore
  data:
  - secretKey: db_username
    remoteRef:
      key: kv/database-credentials
      property: 'db_username'
  - secretKey: db_password
    remoteRef:
      key: kv/database-credentials
      property: 'db_password'
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana-credentials
  namespace: ibm-common-services
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: ibm-cluster-secret-store
    kind: ClusterSecretStore
  data:
  - secretKey: grafana_username
    remoteRef:
      key: kv/grafana-credentials
      property: 'grafana_username'
  - secretKey: grafana_password
    remoteRef:
      key: kv/grafana-credentials
      property: 'grafana_password'
