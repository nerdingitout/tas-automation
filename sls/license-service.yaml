apiVersion: v1
kind: ServiceAccount
metadata:
  name: sls-service-account
  namespace: ibm-sls
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: read-configmap-cluster-role
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: read-configmap-cluster-rolebinding
subjects:
- kind: ServiceAccount
  name: sls-service-account
  namespace: ibm-sls
roleRef:
  kind: ClusterRole
  name: read-configmap-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sls-admin-role
  namespace: ibm-sls
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets", "deployments", "pvc", "events", "replicationcontrollers", "persistentvolumeclaims", "persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sls-admin-binding
  namespace: ibm-sls
subjects:
- kind: ServiceAccount
  name: sls-service-account  # Replace with your actual ServiceAccount name
  namespace: ibm-sls  # Replace with your actual namespace
roleRef:
  kind: Role
  name: sls-admin-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: crd-creator-pod
  namespace: ibm-sls
spec:
  serviceAccountName: sls-service-account
  containers:
  - name: crd-creator-container
    image: openshift/origin-cli:latest
    command:
    - "/bin/sh"
    - "-c"
    - |
      cat <<EOF |oc apply -f -
      apiVersion: sls.ibm.com/v1
      kind: LicenseService
      metadata:
        name: sls
        namespace: ibm-sls
      spec:
        license:
          accept: true
        mongo:
          configDb: admin
          nodes:
            - host: >-
                my-mongodb-0.my-mongodb-svc.mongodb.svc.cluster.local
              port: 27017
            - host: >-
                my-mongodb-1.my-mongodb-svc.mongodb.svc.cluster.local
              port: 27017
            - host: >-
                my-mongodb-2.my-mongodb-svc.mongodb.svc.cluster.local
              port: 27017
          retryWrites: true
          secretName: sls-mongo-credentials
          certificates:
          - alias: mongoca
            crt: $(oc get configmap custom-ca -n mongodb -o jsonpath='{.data.ca\.crt}')
        rlks:
          storage:
            class: ocs-storagecluster-cephfs
            size: 5G
        settings:
          auth:
            enforce: false
          compliance:
            enforce: false
          reconciliation:
            enabled: true
            reconciliationPeriod: 1800
          registration:
            open: true
          reporting:
            maxDailyReports: 90
            maxHourlyReports: 24
            maxMonthlyReports: 12
            reportGenerationPeriod: 3600
            samplingPeriod: 900
      EOF
